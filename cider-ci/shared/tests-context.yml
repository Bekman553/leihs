script-defaults:
  timeout: 600
  template-environment-variables: true

task-defaults:
  eager-trials: 1

  environment-variables:
    RAILS_ENV: test
    LANG: "en_US.UTF-8"
    DATABASE: "leihs_test_{{CIDER_CI_TRIAL_ID}}"

  git-options:
    submodules:
      clone: True
      timeout: 60

  trial-attachments:
    screenshots:
      include-match: tmp\/capybara\/.*\.png$
      content-type: image/png
    logs:
      include-match: log\/.*\.log$
      content-type: text/plain

  traits:
    firefox-esr: true
    linux: true
    nodejs: true
    mysql: true
    rbenv: true
    ruby: true
    tightvnc: true

  ports:
    XVNC_PORT:
      inet_address: "localhost"
      min: 5900
      max: 5999

  scripts:
    _cider-ci_include:
      - cider-ci/shared/scripts/setup-ruby.yml
      - cider-ci/shared/scripts/bundle.yml

    configure-database:
      body: |
        #!/usr/bin/env ruby
        require 'yaml'
        config = \
          { 'test' =>
            { 'adapter' => 'mysql2',
              'encoding' => 'utf8',
              'host' => 'localhost',
              'pool' => 3,
              'username' => ENV['MYSQL_USER'],
              'password' => ENV['MYSQL_PASSWORD'],
              'database' => ENV['DATABASE']}}
        File.open('config/database.yml','w') { |file| file.write config.to_yaml }
      start-when:
        - script: setup-ruby

    create-database:
      body:  echo $DATABASE && mysqladmin --user=$MYSQL_USER --password=$MYSQL_PASSWORD create $DATABASE

    start-vnc:
      body: tightvncserver ":$XVNC_PORT"  -geometry 1920x1080 -rfbport "$XVNC_PORT"  -interface '127.0.0.1'

    precompile-assets:
      exclusive-executor-resource: precompile-assets
      body: cider-ci/bin/precompile-assets-with-caching.sh
      start-when:
      - script: bundle
      - script: configure-database
      - script: create-database

    test:
      body: |
        export DISPLAY=":$XVNC_PORT" \
        # && rm -rf coverage \
        && ruby -v \
        && bundle exec cucumber -p default $CIDER_CI_TASK_FILE
      start-when:
      - script: start-vnc
      - script: create-database
      - script: precompile-assets

    delete-database:
      body:  mysqladmin --user=$MYSQL_USER --password=$MYSQL_PASSWORD --force drop $DATABASE
      ignore-state: true
      ignore-abort: true
      start-when:
      - script: test
        states: [aborted, passed, failed, skipped]

    stop-vnc:
      body: tightvncserver -kill ":$XVNC_PORT" -clean
      ignore-state: true
      ignore-abort: true
      start-when:
      - script: test
        states: [aborted, passed, failed, skipped]
