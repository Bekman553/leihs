-content_for :title, _("List of Inventory")
#inventory.innercontent

  .top
    %h1= yield :title
    
    .content_navigation
      #approve.multibutton
        .alternatives
          .trigger
            .arrow
          %a.button.white{:href => new_backend_inventory_pool_option_path(current_inventory_pool)}
            .additem.icon
            = _("Create %s") % _("Option")
          %a.button.white{:href => new_backend_inventory_pool_item_path(current_inventory_pool)}
            .additem.icon
            = _("Create %s") % _("Item")
          /%a.button.white
          /  .additem.icon
          /  = _("Add Package")
        %a.button.white{:href => new_backend_inventory_pool_model_path(current_inventory_pool)}
          .additem.icon
          = _("Create %s") % _("Model")

  %section
    .inlinetabs
      - [ [nil, _("All")],
          [{:borrowable => true}, _("Borrowable")],
          [{:borrowable => false}, _("Not Borrowable")],
          [{:retired =>  true}, _("Retired")]].each do |x|
        %a{:class => "tab#{' active' if x[0].nil?}", :"data-tab" => x[0].to_json}
          %span.text= x[1]    

    .list

      %ul.navigation.line
        .container
          %li.categories
            %button{:class => params[:navigation].blank? ? "button white explorative-search-toggle" : "button white explorative-search-toggle active", :title => _("Toggle %s") % _("Categories")}
              .categories.icon
          %li.filter
            %label.select.responsible
              = image_tag "loading.gif", :class => "loading icon"
              %span= _("Responsible")

            - [ ["owned", _("Owned")],
                ["in_stock", _("In Stock")],
                ["incomplete", _("Incomplete")],
                ["broken", _("Broken")]].each do |x|
              %label
                %input{:type => :checkbox, :"data-filter" => x.first}
                %span= x.last
            = link_to backend_inventory_pool_models_path(current_inventory_pool, :format => "csv"), :class => "button white export_csv", :title => _("CSV export") do
              .valuelist.icon
              = _("CSV") 
          %li.search
            = form_tag("", :method => :get, :autocomplete => :off) do
              %input{:type => "text", :name => "query", :value => "#{params[:query]}", :placeholder => "#{_("Search %s") % _("Inventory")}"}
              = image_tag "loading.gif", :class => "loading"
            = image_tag "loading.gif", :class => "loading"

    .table
      = render :partial => "backend/explorative_search/container"
      .list#inventory-list
        %span.loading
          = image_tag "loading.gif"
  
  .pagination_container{style: "z-index:1"}

:ruby

  begin
    way = params[:way].map do |w| 
      begin Integer(w) rescue w end
    end
  rescue
  end

  begin 
    current_category_id = Integer(way.last)
  rescue
  end

:coffeescript
  jQuery -> 
    new App.InventoryController
      currentCategoryId: #{current_category_id.to_json}
      navigation: new App.ExplorativeSearchNavigationController
        button: $(".explorative-search-toggle")
        el: $(".explorative-navigation")
        way: #{way.to_json}
