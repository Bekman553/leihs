%form.indent{:name => "form", "ng-submit" => "submit()"}

  .content_navigation
    %a.button.red{:href => "/backend/inventory_pools/{{current_inventory_pool_id}}/models"}
      {{_jed("Cancel")}}
    %button.button.green{"ng-disabled" => "form.$invalid"}
      {{_jed("Save %s", _jed("Model"))}}

  .top
    %h1
      %span{"ng-switch" => "action"}
        %span{"ng-switch-when" => "create"} {{_jed("Create %s", _jed("Model"))}}
        %span{"ng-switch-when" => "edit"} {{_jed("Edit %s", _jed("Model"))}}

  .left
    %section
      .inner
        .field
          %h3.key {{_jed("Name")}}:
          .value{"ng-switch" => "model.is_editable"}
            .input{"ng-switch-when" => "true"}
              %input{:type => "text", "ng-model" => "model.name", :name => "name"}
            .readonly{"ng-switch-when" => "false"}
              %span {{model.name}}
        .field
          %h3.key {{_jed("Manufacturer")}}:
          .value{"ng-switch" => "model.is_editable"}
            .input{"ng-switch-when" => "true"}
              %input{:type => "text", "ng-model" => "model.manufacturer"}
            .readonly{"ng-switch-when" => "false"}
              %span {{model.manufacturer}}
        .field
          %h3.key {{_jed("Description")}}:
          .value{"ng-switch" => "model.is_editable"}
            .input{"ng-switch-when" => "true"}
              %textarea{"ng-model" => "model.description"}
            .readonly{"ng-switch-when" => "false"}
              %span {{model.description}}
        .field
          %h3.key {{_jed("Technical Details")}}:
          .value{"ng-switch" => "model.is_editable"}
            .input{"ng-switch-when" => "true"}
              %textarea{"ng-model" => "model.technical_detail"}
            .readonly{"ng-switch-when" => "false"}
              %span {{model.technical_detail}}
        .field
          %h3.key {{_jed("Internal Description")}}:
          .value{"ng-switch" => "model.is_editable"}
            .input{"ng-switch-when" => "true"}
              %textarea{"ng-model" => "model.internal_description"}
            .readonly{"ng-switch-when" => "false"}
              %span {{model.internal_description}}
        .field
          %h3.key {{_jed("Important notes for hand over")}}:
          .value{"ng-switch" => "model.is_editable"}
            .input{"ng-switch-when" => "true"}
              %textarea{"ng-model" => "model.hand_over_note"}
            .readonly{"ng-switch-when" => "false"}
              %span {{model.hand_over_note}}

    %section
      .inner
        .field
          %div
            %h3.key 
              = "{{_jed('Allocations')}}"
              = "(max. {{model.max_partition_capacity}})"
            .value
              .input
                %label.container
                  %input.autocomplete{:type => "text",
                                        :placeholder => '{{_jed("Group")}}',
                                        :data => { :autocomplete_element_tmpl => "tmpl/autocomplete/generic",
                                                   :autocomplete_search_attr => 'query',
                                                   :url => "/backend/inventory_pools/{{currentInventoryPool.id}}/groups",
                                                   :autocomplete_display_attribute => "name",
                                                   :autocomplete_select_callback => "angular.element(el).scope().addPartition",
                                                   :autocomplete_clear_input_value_on_select => "true",
                                                   :autocomplete_blur_on_select => "true" }}
                  .icon.arrow
            .clear
          %div.field-inline-entry.partition{"ng-repeat" => "partition in model.partitions", "ng-class" => "{tobedeleted: partition._destroy}"}
            %span.text-ellipsis{"ng-class" => "{tobedeleted: partition._destroy}", :style => "display: block; float: left; max-width: 200px; line-height: 1em"} {{partition.group.name}}
            .floatright
              .capacity{:style => "display: inline-block; padding-right: 16px; vertical-align: top"}
                %input{"ng-class" => "{tobedeleted: partition._destroy}", :type => :text, "ng-model" => "partition.quantity", :min => 1, :style => "width: 30px; text-align: center", :"ng-disabled" => "partition._destroy"}
              %div{:style => "display: inline-block;"}
                %span{"ng-switch" => "!!partition.id"}
                  %span{"ng-switch-when" => "true"}
                    %label.clickable.floatright
                      %input.hidden{type: "checkbox", "ng-model" => "partition._destroy"}
                      %span{"ng-switch" => "partition._destroy"}
                        %span{"ng-switch-when" => "true"} {{_jed("undo")}}
                        %span{"ng-switch-default" => ""} {{_jed("Remove")}}
                  %span{"ng-switch-default" => ""}
                    .clickable{"ng-click" => "removePartition(this)"} {{_jed("Remove")}}
                .clear

      
  .right
    %section
      .inner
        .field
          %div
            %h3.key {{_jed("Images")}}:
            .value{"ng-switch" => "model.is_editable"}
              .input{"ng-switch-when" => "true"}
                %input.hidden{:type => "file", :multiple => true, :onchange => "angular.element(this).scope().setFile(this, 1)"}
                %a.button.white.floatright{:onclick => '$(this).prev("input[type=file]").click()'}
                  {{_jed("Select Image")}}
              .readonly{"ng-switch-when" => "false"}
            .clear
          %div.field-inline-entry{"ng-repeat" => "file in model.images"}
            %span{"ng-switch" => "!!file.id"}
              %span{"ng-switch-when" => "true"}
                %a{"ng-class" => "{tobedeleted: file._destroy}", href: "{{file.public_filename}}", target: '_blank'} 
                  %img{"ng-src" => "{{file.public_filename_thumb}}", style: "max-height: 26px; max-width: 26px"}
                  {{file.filename}}
                %label.clickable.floatright
                  %input.hidden{type: "checkbox", "ng-model" => "file._destroy"} 
                    %span{"ng-switch" => "file._destroy"}
                      %span{"ng-switch-when" => "true"} {{_jed("undo")}}
                      %span{"ng-switch-default" => ""} {{_jed("Delete")}}
                .clear
              %span{"ng-switch-when" => "false"}
                {{file.filename}}
                %a.clickable.floatright{"ng-click" => "removeImage(this)"} {{_jed("Delete")}}
      %br
      .inner
        .field
          %div
            %h3.key {{_jed("Attachments")}}:
            .value{"ng-switch" => "model.is_editable"}
              .input{"ng-switch-when" => "true"}
                %input.opacity-hidden{:id => "attachments_filepicker", :name => "attachments_filepicker", :type => "file", :multiple => true, :onchange => "angular.element(this).scope().setFile(this, 2)"}
                %a.button.white.floatright{:onclick => '$(this).prev("input[type=file]").click()'}
                  {{_jed("Select File")}}
              .readonly{"ng-switch-when" => "false"}
            .clear
          %div.field-inline-entry{"ng-repeat" => "file in model.attachments"}
            %span{"ng-switch" => "!!file.id"}
              %span{"ng-switch-when" => "true"}
                %a{"ng-class" => "{tobedeleted: file._destroy}", href: "{{file.public_filename}}", target: '_blank'} {{file.filename}}
                %label.clickable.floatright
                  %input.hidden{type: "checkbox", "ng-model" => "file._destroy"}
                    %span{"ng-switch" => "file._destroy"}
                      %span{"ng-switch-when" => "true"} {{_jed("undo")}}
                      %span{"ng-switch-default" => ""} {{_jed("Delete")}}
                .clear
              %span{"ng-switch-when" => "false"}
                {{file.filename}}
                %a.clickable.floatright{"ng-click" => "removeAttachment(this)"} {{_jed("Delete")}}
      %br
      .inner
        .field
          %div
            %h3.key {{_jed("Accessories")}}:
            .value{"ng-switch" => "model.is_editable"}
              .input{"ng-switch-when" => "true"}
                %input.add-input{:form => "no-form", :type => "text", :onchange => "angular.element(this).scope().addAccessory(this)"}
                %a.button.white.small.add-button= "+"
                .clear
              .readonly{"ng-switch-when" => "false"}
            .clear
          %div.field-inline-entry{"ng-repeat" => "accessory in model.accessories"}
            %span{"ng-switch" => "!!accessory.id"}
              %span{"ng-switch-when" => "true"}
                %label{"ng-class" => "{tobedeleted: accessory._destroy}"}
                  %input{type: "checkbox", "ng-model" => "accessory.active", "ng-class" => "{hidden: accessory._destroy}"}
                  {{accessory.name}}
                %span{"ng-show" => "accessory.is_deletable"}
                  %label.clickable.floatright
                    %input.hidden{type: "checkbox", "ng-model" => "accessory._destroy"}
                    %span{"ng-switch" => "accessory._destroy"}
                      %span{"ng-switch-when" => "true"} {{_jed("undo")}}
                      %span{"ng-switch-default" => ""} {{_jed("Delete")}}
              %span{"ng-switch-when" => "false"}
                %label
                  %input{type: "checkbox", "ng-model" => "accessory.active"}
                  {{accessory.name}}
                %a.clickable.floatright{"ng-click" => "removeAccessory(this)"} {{_jed("Delete")}}

      %span{"ng-switch" => "model.is_package"}
        %span{"ng-switch-when" => "true"}
          %br
          .inner
            .field
              %div
                %h3.key {{_jed("Packages")}}:
                .value
                  %a.button.white.add-button{:"ng-click" => "openPackageDialog()"} {{_jed("Add %s", _jed("Package"))}}
                .clear
              %div.field-inline-entry{"ng-repeat" => "package in model.packages"}
                %div.inventory_code.text-ellipsis{"ng-class" => "{tobedeleted: package._destroy}", :width => "100"} {{package.inventory_code}}
                .floatright
                  %div{:style => "display: inline-block;"}
                    %span.clickable{:"ng-click" => "openPackageDialog(this)"} {{_jed("Edit")}}
                  %div{:style => "display: inline-block;"}
                    %span{"ng-switch" => "!!package.id"}
                      %span{"ng-switch-when" => "true"}
                        %span{"ng-switch" => "package.in_stock"}
                          %span{"ng-switch-when" => "true"}
                            %label.clickable
                              %input.hidden{type: "checkbox", "ng-model" => "package._destroy"}
                              %span{"ng-switch" => "package._destroy"}
                                %span{"ng-switch-when" => "true"} {{_jed("undo")}}
                                %span{"ng-switch-default" => ""} {{_jed("Delete")}}
                      %span{"ng-switch-when" => "false"}
                        %a.clickable{:"ng-click" => "deletePackage(this)"} {{_jed("Delete")}}

      %br
      .inner
        .field
          %div
            %h3.key {{_jed("Compatibles")}}:
            .value
              .input
                %label.container
                  %input.autocomplete{:type => "text",
                                        :placeholder => '{{_jed("Model")}}',
                                        :data => { :autocomplete_element_tmpl => "tmpl/autocomplete/generic",
                                                   :autocomplete_search_attr => 'query',
                                                   :url => "/backend/inventory_pools/{{currentInventoryPool.id}}/models",
                                                   :autocomplete_display_attribute => "name",
                                                   :autocomplete_select_callback => "angular.element(el).scope().addCompatible",
                                                   :autocomplete_clear_input_value_on_select => "true",
                                                   :autocomplete_blur_on_select => "true" }}
                  .icon.arrow
            .clear
          %div.field-inline-entry{"ng-repeat" => "compatible in model.compatibles"}
            {{compatible.name}}
            %label.clickable.floatright{"ng-click" => "removeCompatible(this)"} {{_jed("delete")}}


      %br
      .inner.properties
        .field
          %div
            %h3.key {{_jed("Properties")}}:
            .value{"ng-switch" => "model.is_editable"}
              .input{"ng-switch-when" => "true"}
                %a#add-property.button.white.add-button{:"ng-click" => "addProperty()"} {{_jed("Add %s", _jed("Property"))}}
                .clear
              .readonly{"ng-switch-when" => "false"}
            .clear
          %ul{:"ui-sortable" => "", :"ng-model" => "model.properties"}
            %li.field-inline-entry{"ng-repeat" => "property in model.properties", "ng-class" => "{tobedeleted: property._destroy}"}
              .movetoggle &#8597;
              %span{"ng-switch" => "!!property.id"}
                %span{"ng-switch-when" => "true"}
                  %input{:type => :text, :"ng-model" => "property.key", "ng-class" => "{tobedeleted: property._destroy}", :"ng-disabled" => "property._destroy"}
                  %input{:type => :text, :"ng-model" => "property.value", "ng-class" => "{tobedeleted: property._destroy}", :"ng-disabled" => "property._destroy"}
                  %label.clickable.floatright
                    %input.hidden{type: "checkbox", "ng-model" => "property._destroy"}
                    x
                  .clear
                %span{"ng-switch-when" => "false"}
                  %input{:name => "key", :type => :text, :"ng-model" => "property.key", :placeholder => '{{_jed("Key")}}'}
                  %input{:type => :text, :"ng-model" => "property.value", :placeholder => '{{_jed("Value")}}'}
                  %a.clickable.floatright{"ng-click" => "removeProperty(this)"} x

  .clear
  %span.loading{"ng-show" => "isLoading"}
    %img.loading.icon{:src => "/assets/loading.gif"}