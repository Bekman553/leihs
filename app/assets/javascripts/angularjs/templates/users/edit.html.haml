%form.indent.prevent-scanner-submit{:name => "form", "ng-submit" => "submit()"}

  .content_navigation
    %a.button.red{:href => "/backend/inventory_pools/{{current_inventory_pool_id}}/users/{{user.id}}"}
      {{_jed("Cancel")}}
    %button.button.green{"ng-disabled" => "form.$invalid"}
      {{_jed("Save %s", _jed("User"))}}

  .top
    %h1
      {{user.name | truncate:30}}

    %h3
      %span.red{"ng-repeat" => "error in errors"}
        {{error}}

  .left
    %section
      %h2 {{_jed("General Information")}}
      .inner
        .field.text
          %h3.key {{_jed("Last name")}}:
          .value{"ng-switch" => "user.is_editable"}
            .input{"ng-switch-when" => "true"}
              %input{:type => "text", "ng-model" => "user.lastname"}
            .readonly{"ng-switch-when" => "false"}
              %span {{user.lastname}}
        .field.text
          %h3.key {{_jed("First name")}}:
          .value{"ng-switch" => "user.is_editable"}
            .input{"ng-switch-when" => "true"}
              %input{:type => "text", "ng-model" => "user.firstname"}
            .readonly{"ng-switch-when" => "false"}
              %span {{user.firstname}}
        .field.text
          %h3.key {{_jed("Address")}}:
          .value{"ng-switch" => "user.is_editable"}
            .input{"ng-switch-when" => "true"}
              %input{:type => "text", "ng-model" => "user.address"}
            .readonly{"ng-switch-when" => "false"}
              %span {{user.address}}
        .field.text
          %h3.key {{_jed("Zip")}}:
          .value{"ng-switch" => "user.is_editable"}
            .input{"ng-switch-when" => "true"}
              %input{:type => "text", "ng-model" => "user.zip"}
            .readonly{"ng-switch-when" => "false"}
              %span {{user.zip}}
        .field.text
          %h3.key {{_jed("City")}}:
          .value{"ng-switch" => "user.is_editable"}
            .input{"ng-switch-when" => "true"}
              %input{:type => "text", "ng-model" => "user.city"}
            .readonly{"ng-switch-when" => "false"}
              %span {{user.city}}
        .field.text
          %h3.key {{_jed("Country")}}:
          .value{"ng-switch" => "user.is_editable"}
            .input{"ng-switch-when" => "true"}
              %input{:type => "text", "ng-model" => "user.country"}
            .readonly{"ng-switch-when" => "false"}
              %span {{user.country}}
        .field.text
          %h3.key {{_jed("Phone")}}:
          .value{"ng-switch" => "user.is_editable"}
            .input{"ng-switch-when" => "true"}
              %input{:type => "text", "ng-model" => "user.phone"}
            .readonly{"ng-switch-when" => "false"}
              %span {{user.phone}}
        .field.text
          %h3.key {{_jed("E-Mail")}}:
          .value{"ng-switch" => "user.is_editable"}
            .input{"ng-switch-when" => "true"}
              %input{:type => "text", "ng-model" => "user.email"}
            .readonly{"ng-switch-when" => "false"}
              %span {{user.email}}


  .right
    %section
      %h2 {{_jed("Access")}}
      .inner
        .field.text
          %h3.key {{_jed("Badge ID")}}:
          .value
            .input
              %input{:type => "text", "ng-model" => "user.badge_id"}
        .field.text
          %h3.key {{_jed("Access as")}}:
          .value
            %select{"ng-model" => "user.access_right.role_name", "ng-options" => "role.name as role.text for role in possible_roles"}

        .field.text
          %h3.key {{_jed("Suspended until")}}:
          .value
            .input
              %input{:type => "text", "ng-model" => "user.access_right.suspended_until", "ui-date" => ""}
        .field.text{"ng-show" => "user.access_right.suspended_until"}
          %h3.key
            {{_jed("Suspended Reason")}}:
            %span.red{"ng-show" => "form.suspended_reason.$error.required", }
              {{_jed("required")}}
          .value
            .input
              %textarea{:name => "suspended_reason", "ng-model" => "user.access_right.suspended_reason", :style => "height: 3em; vertical-align: top;", "ng-required" => "user.access_right.suspended_until"}
        
        .field.text
          %div
            %h3.key {{_jed("Groups")}}:
            .value
              %label.container
                %input.autocomplete{:type => "text",
                                    :placeholder => '{{_jed("Group")}}',
                                    :data => { :autocomplete_element_tmpl => "tmpl/autocomplete/generic",
                                               :autocomplete_search_attr => 'query',
                                               :url => "/backend/inventory_pools/{{currentInventoryPool.id}}/groups",
                                               :autocomplete_display_attribute => "name",
                                               :autocomplete_select_callback => "angular.element(el).scope().addGroup",
                                               :autocomplete_clear_input_value_on_select => "true",
                                               :autocomplete_blur_on_select => "true",
                                               :autocomplete_search_on_focus => "true"}}
                .arrow.icon
            .clear
          %div.field-inline-entry{"ng-repeat" => "group in user.groups"}
            %span.text-ellipsis{:width => "100"} {{group.name}}
            .floatright
              %div{:style => "display: inline-block;"}
                %a.clickable{:"ng-click" => "removeGroup(this)"} {{_jed("Remove")}}

  .clear

